{"mappings":"ACgCA,SAAS,EACP,CAAW,CACX,CAAe,CACf,CAAQ,CACR,CAAU,CACV,CAAM,EAIN,IAAM,EAAQ,EAAc,EAFL,EAAa,EAE2B,SAE/D,AAAI,EAAQ,EACH,EAGL,EAAQ,EAAa,AAAS,EAAT,EAAa,EAC7B,EAAW,EAAa,AAAS,EAAT,EAG1B,CACT,CAlDA,SAAS,gBAAgB,CAAC,QAAS,SAAC,CAApC,EACE,IAAM,EAAO,SAAS,aAAa,CAAC,SAC9B,EAAS,SAAS,aAAa,CAAC,WAEtC,GAAI,EAAE,MAAM,GAAK,GAAQ,EAAK,QAAQ,CAAC,EAAE,MAAM,EAAG,CAChD,IAAM,EAAiB,EAAK,qBAAqB,GAC3C,EAAmB,EAAO,qBAAqB,GAE/C,EAAkB,CACtB,EAAG,EACD,EAAE,OAAO,CACT,EAAe,CAAC,CAChB,EAAe,KAAK,CACpB,EAAiB,KAAK,CACtB,EAAK,UAAU,EAEjB,EAAG,EACD,EAAE,OAAO,CACT,EAAe,CAAC,CAChB,EAAe,MAAM,CACrB,EAAiB,MAAM,CACvB,EAAK,SAAS,CAElB,CAEA,CAAA,EAAO,KAAK,CAAC,GAAG,CAAI,GAAoB,MAAA,CAAlB,EAAgB,CAAC,CAAC,MACxC,EAAO,KAAK,CAAC,IAAI,CAAI,GAAoB,MAAA,CAAlB,EAAgB,CAAC,CAAC,KAC3C,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\ndocument.addEventListener(\"click\", function(e) {\n    var wall = document.querySelector(\".wall\");\n    var spider = document.querySelector(\".spider\");\n    if (e.target === wall || wall.contains(e.target)) {\n        var wallPropertyes = wall.getBoundingClientRect();\n        var spiderPropertyes = spider.getBoundingClientRect();\n        var newCoordsSpeder = {\n            x: coordinateCalculation(e.clientX, wallPropertyes.x, wallPropertyes.width, spiderPropertyes.width, wall.clientLeft),\n            y: coordinateCalculation(e.clientY, wallPropertyes.y, wallPropertyes.height, spiderPropertyes.height, wall.clientTop)\n        };\n        spider.style.top = \"\".concat(newCoordsSpeder.y, \"px\");\n        spider.style.left = \"\".concat(newCoordsSpeder.x, \"px\");\n    }\n});\nfunction coordinateCalculation(clientCoord, planeCoordStart, wallSize, spiderSize, border) {\n    var halfSpiderSize = spiderSize / 2;\n    var coord = clientCoord - planeCoordStart - halfSpiderSize - border;\n    if (coord < 0) return 0;\n    if (coord + spiderSize + border * 2 > wallSize) return wallSize - spiderSize - border * 2;\n    return coord;\n}\n\n//# sourceMappingURL=index.09d06cb2.js.map\n","'use strict';\n\ndocument.addEventListener('click', (e) => {\n  const wall = document.querySelector('.wall');\n  const spider = document.querySelector('.spider');\n\n  if (e.target === wall || wall.contains(e.target)) {\n    const wallPropertyes = wall.getBoundingClientRect();\n    const spiderPropertyes = spider.getBoundingClientRect();\n\n    const newCoordsSpeder = {\n      x: coordinateCalculation(\n        e.clientX,\n        wallPropertyes.x,\n        wallPropertyes.width,\n        spiderPropertyes.width,\n        wall.clientLeft,\n      ),\n      y: coordinateCalculation(\n        e.clientY,\n        wallPropertyes.y,\n        wallPropertyes.height,\n        spiderPropertyes.height,\n        wall.clientTop,\n      ),\n    };\n\n    spider.style.top = `${newCoordsSpeder.y}px`;\n    spider.style.left = `${newCoordsSpeder.x}px`;\n  }\n});\n\nfunction coordinateCalculation(\n  clientCoord,\n  planeCoordStart,\n  wallSize,\n  spiderSize,\n  border,\n) {\n  const halfSpiderSize = spiderSize / 2;\n\n  const coord = clientCoord - planeCoordStart - halfSpiderSize - border;\n\n  if (coord < 0) {\n    return 0;\n  }\n\n  if (coord + spiderSize + border * 2 > wallSize) {\n    return wallSize - spiderSize - border * 2;\n  }\n\n  return coord;\n}\n"],"names":["coordinateCalculation","clientCoord","planeCoordStart","wallSize","spiderSize","border","coord","document","addEventListener","e","wall","querySelector","spider","target","contains","wallPropertyes","getBoundingClientRect","spiderPropertyes","newCoordsSpeder","x","clientX","width","clientLeft","y","clientY","height","clientTop","style","top","concat","left"],"version":3,"file":"index.09d06cb2.js.map"}